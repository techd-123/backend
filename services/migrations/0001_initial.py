# Generated by Django 5.2.3 on 2025-09-08 22:14

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('venue', 'Venue'), ('planning_decor', 'Planning & Decor'), ('photography', 'Photography'), ('makeup', 'Makeup'), ('bridal_wear', 'Bridal Wear'), ('groom_wear', 'Groom Wear'), ('mehandi', 'Mehandi'), ('wedding_cake', 'Wedding Cake'), ('car_rental', 'Car Rental'), ('dj', 'DJ'), ('jewelry_rental', 'Jewelry Rental'), ('catering', 'Catering')], max_length=50)),
                ('object_id', models.PositiveIntegerField()),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BridalWear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/')),
                ('category', models.CharField(choices=[('lehenga', 'Lehenga'), ('saree', 'Saree'), ('gown', 'Gown'), ('traditional', 'Traditional'), ('modern', 'Modern'), ('indo_western', 'Indo-Western'), ('custom', 'Custom Design'), ('rental', 'Rental'), ('other', 'Other')], max_length=50)),
                ('price_range_min', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_range_max', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fabric', models.CharField(blank=True, max_length=100, null=True)),
                ('color_options', models.TextField(blank=True, null=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarRental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/')),
                ('category', models.CharField(choices=[('luxury', 'Luxury Cars'), ('vintage', 'Vintage Cars'), ('suv', 'SUVs'), ('limousine', 'Limousine'), ('convertible', 'Convertible'), ('premium', 'Premium Sedan'), ('economic', 'Economic'), ('other', 'Other')], max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('car_model', models.CharField(max_length=100)),
                ('capacity', models.PositiveIntegerField()),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('items', models.ManyToManyField(to='services.cartitem')),
            ],
        ),
        migrations.CreateModel(
            name='Catering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/')),
                ('category', models.CharField(choices=[('vegetarian', 'Vegetarian'), ('non_vegetarian', 'Non-Vegetarian'), ('both', 'Vegetarian + Non-Veg'), ('jain', 'Jain'), ('regional', 'Regional Cuisine'), ('international', 'International'), ('live_counters', 'Live Counters'), ('package', 'Package Deal'), ('other', 'Other')], max_length=50)),
                ('price_per_plate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('min_guests', models.PositiveIntegerField(default=50)),
                ('cuisine_types', models.TextField(blank=True, null=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DJ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/')),
                ('category', models.CharField(choices=[('wedding', 'Wedding DJ'), ('reception', 'Reception DJ'), ('both', 'Wedding + Reception'), ('bollywood', 'Bollywood Specialist'), ('western', 'Western Music'), ('regional', 'Regional Music'), ('multilingual', 'Multilingual'), ('other', 'Other')], max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('music_genres', models.TextField(blank=True, null=True)),
                ('equipment_provided', models.TextField(blank=True, null=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroomWear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/')),
                ('category', models.CharField(choices=[('sherwani', 'Sherwani'), ('suit', 'Suit'), ('traditional', 'Traditional'), ('modern', 'Modern'), ('indo_western', 'Indo-Western'), ('custom', 'Custom Design'), ('rental', 'Rental'), ('other', 'Other')], max_length=50)),
                ('price_range_min', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_range_max', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fabric', models.CharField(blank=True, max_length=100, null=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JewelryRental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/')),
                ('category', models.CharField(choices=[('bridal_set', 'Bridal Set'), ('necklace', 'Necklace'), ('earrings', 'Earrings'), ('bangles', 'Bangles'), ('maang_tikka', 'Maang Tikka'), ('nose_ring', 'Nose Ring'), ('complete_set', 'Complete Set'), ('traditional', 'Traditional'), ('modern', 'Modern'), ('other', 'Other')], max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('material', models.CharField(blank=True, max_length=100, null=True)),
                ('stone_type', models.CharField(blank=True, max_length=100, null=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Makeup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/')),
                ('category', models.CharField(choices=[('bridal', 'Bridal Makeup'), ('groom', 'Groom Makeup'), ('family', 'Family Makeup'), ('engagement', 'Engagement'), ('reception', 'Reception'), ('trial', 'Trial Session'), ('other', 'Other')], max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('specialty', models.CharField(blank=True, max_length=100, null=True)),
                ('brands_used', models.TextField(blank=True, null=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mehandi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/')),
                ('category', models.CharField(choices=[('bridal', 'Bridal Mehandi'), ('family', 'Family Mehandi'), ('simple', 'Simple Design'), ('intricate', 'Intricate Design'), ('arabic', 'Arabic Style'), ('indian', 'Indian Traditional'), ('other', 'Other')], max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('design_types', models.TextField(blank=True, null=True)),
                ('duration_hours', models.PositiveIntegerField(default=2)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Photography',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/')),
                ('category', models.CharField(choices=[('pre_wedding', 'Pre-Wedding'), ('wedding_day', 'Wedding Day'), ('cinematography', 'Cinematography'), ('both', 'Photo + Video'), ('drone', 'Drone Photography'), ('traditional', 'Traditional'), ('candid', 'Candid'), ('other', 'Other')], max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('portfolio_link', models.URLField(blank=True, null=True)),
                ('equipment', models.TextField(blank=True, null=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanningAndDecor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/')),
                ('category', models.CharField(choices=[('full_planning', 'Full Wedding Planning'), ('partial_planning', 'Partial Planning'), ('day_coordination', 'Day-of Coordination'), ('decor_only', 'Decor Only'), ('theme_based', 'Theme Based'), ('other', 'Other')], max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('experience_years', models.PositiveIntegerField(default=0)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/')),
                ('category', models.CharField(choices=[('premium', 'Premium'), ('budget_friendly', 'Budget Friendly'), ('popular', 'Popular'), ('luxury', 'Luxury'), ('outdoor', 'Outdoor'), ('indoor', 'Indoor'), ('beach', 'Beach'), ('garden', 'Garden'), ('banquet', 'Banquet Hall'), ('other', 'Other')], max_length=50)),
                ('capacity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amenities', models.TextField(blank=True, null=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WeddingCake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/')),
                ('category', models.CharField(choices=[('traditional', 'Traditional'), ('modern', 'Modern'), ('theme_based', 'Theme Based'), ('custom_design', 'Custom Design'), ('eggless', 'Eggless'), ('multiple_tier', 'Multiple Tier'), ('single_tier', 'Single Tier'), ('other', 'Other')], max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('flavors', models.TextField(blank=True, null=True)),
                ('serving_size', models.PositiveIntegerField()),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bridal_wear', models.ManyToManyField(blank=True, to='services.bridalwear')),
                ('car_rentals', models.ManyToManyField(blank=True, to='services.carrental')),
                ('catering', models.ManyToManyField(blank=True, to='services.catering')),
                ('djs', models.ManyToManyField(blank=True, to='services.dj')),
                ('groom_wear', models.ManyToManyField(blank=True, to='services.groomwear')),
                ('jewelry_rentals', models.ManyToManyField(blank=True, to='services.jewelryrental')),
                ('makeup', models.ManyToManyField(blank=True, to='services.makeup')),
                ('mehandi', models.ManyToManyField(blank=True, to='services.mehandi')),
                ('photography', models.ManyToManyField(blank=True, to='services.photography')),
                ('planning_decor', models.ManyToManyField(blank=True, to='services.planninganddecor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('venues', models.ManyToManyField(blank=True, to='services.venue')),
                ('wedding_cake', models.ManyToManyField(blank=True, to='services.weddingcake')),
            ],
        ),
    ]
